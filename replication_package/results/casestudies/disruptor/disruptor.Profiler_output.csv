"Project","MethodIndex","Method","Count","Tests"
"disruptor","1","com.lmax.disruptor.dsl.ConsumerRepository.getLastSequenceInChain(boolean)","16","com.lmax.disruptor.dsl.DisruptorTest.shouldAllowChainingEventHandlersWithSuperType [],com.lmax.disruptor.ShutdownOnFatalExceptionTest.shouldShutdownGracefulEvenWithFatalExceptionHandler []"
"disruptor","2","com.lmax.disruptor.dsl.Disruptor.shutdown(long,TimeUnit)","4","com.lmax.disruptor.dsl.DisruptorTest.shouldAllowChainingEventHandlersWithSuperType []"
"disruptor","3","com.lmax.disruptor.MultiProducerSequencer.setAvailable(long)","2","com.lmax.disruptor.RingBufferTest.shouldNotTryPublishEventsTwoArgWhenBatchSizeIsNegative [],com.lmax.disruptor.RingBufferTest.shouldHandleResetToAndNotWrapUnnecessarilySingleProducer []"
"disruptor","4","com.lmax.disruptor.dsl.Disruptor.hasBacklog()","1","com.lmax.disruptor.dsl.DisruptorTest.shouldAllowChainingEventHandlersWithSuperType []"
"disruptor","5","com.lmax.disruptor.RingBuffer.getCursor()","1","com.lmax.disruptor.ShutdownOnFatalExceptionTest.shouldShutdownGracefulEvenWithFatalExceptionHandler []"
"disruptor","6","com.lmax.disruptor.dsl.EventProcessorInfo.getSequences()","1","com.lmax.disruptor.ShutdownOnFatalExceptionTest.shouldShutdownGracefulEvenWithFatalExceptionHandler []"
"disruptor","7","com.lmax.disruptor.FixedSequenceGroup.get()","1","com.lmax.disruptor.dsl.DisruptorTest.shouldAllowChainingEventHandlersWithSuperType []"
"disruptor","8","com.lmax.disruptor.dsl.ConsumerRepository.add(EventProcessor,EventHandler<?superT>,SequenceBarrier)","1","com.lmax.disruptor.ShutdownOnFatalExceptionTest.shouldShutdownGracefulEvenWithFatalExceptionHandler []"
"disruptor","9","com.lmax.disruptor.BlockingWaitStrategy.waitFor(long,Sequence,Sequence,SequenceBarrier)","1","com.lmax.disruptor.dsl.DisruptorTest.shouldAllowChainingEventHandlersWithSuperType []"
"disruptor","10","com.lmax.disruptor.Sequence.compareAndSet(long,long)","1","com.lmax.disruptor.RingBufferTest.shouldPublishEventsOneArgWithinBatch []"
"disruptor","11","com.lmax.disruptor.RingBuffer.get(long)","1","com.lmax.disruptor.RingBufferTest.shouldNotPublishEventsWhenBatchSizeIs0 []"
"disruptor","12","com.lmax.disruptor.MultiProducerSequencer.next(int)","1","com.lmax.disruptor.RingBufferTest.shouldPublishEventsWithBatchSizeOfOne []"
