"Project","MethodIndex","Method","Count","Tests"
"jcodec","1","org.jcodec.scale.BaseResampler.resample(Picture,Picture)","126","org.jcodec.scale.ResamplerTest.randomLanczosTest [],org.jcodec.scale.ResamplerTest.randomBicubicTest []"
"jcodec","2","org.jcodec.common.io.VLC.readVLC(BitReader)","85","org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC3 []"
"jcodec","3","org.jcodec.codecs.h264.decode.CoeffTransformer.idct4x4(int[])","82","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.H264EncoderTest.canEncodeYuv420J [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","4","org.jcodec.codecs.h264.decode.MBlockDecoderBase.predictChromaInter(Frame[][],MvList,int,int,int,Picture,PartPred[])","55","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x8CABAC []"
"jcodec","5","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.filterBlockEdgeVert(Picture,int,int,int,int,int,int,int)","54","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testSpatialDirect [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","6","org.jcodec.codecs.h264.decode.BlockInterpolator.getBlockChroma(byte[],int,int,byte[],int,int,int,int,int,int)","33","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCABAC1 []"
"jcodec","7","org.jcodec.common.io.VLC.invert(int,int,int,IntArrayList,IntArrayList)","32","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x16CAVLC [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC3 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC2 [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCAVLC1 [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC3 [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict1 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC3 [],org.jcodec.codecs.h264.Intra16x16PredictionBuilderTest.testPlane [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC4 [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCAVLC2 [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC1 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x4CAVLC [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x8CAVLC [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC4 [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x4CAVLC [],org.jcodec.codecs.h264.H264EncoderTest.testRandomImage [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict2 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x8CAVLC [],org.jcodec.codecs.mpa.Mp3DecoderTest.testOneFile [],org.jcodec.codecs.h264.ResidualBlockTest.testAC15CABAC [],org.jcodec.codecs.h264.ResidualBlockTest.testLuma3CAVLC [],org.jcodec.codecs.h264.Intra16x16PredictionBuilderTest.testVertical [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict4 [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC5 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x16CAVLC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x4CABAC [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict3 []"
"jcodec","8","org.jcodec.codecs.h264.decode.SliceDecoder.initContext()","31","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x16CAVLC [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC1 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC1 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testLongTermCABAC [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCABAC2 [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCAVLC1 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC5 [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC3 [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC3 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x8CABAC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x8CABAC [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC2 [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x4CABAC [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC4 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC4 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x8CABAC [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC4 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x4CAVLC [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x8CAVLC [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC4 [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testLongTermCAVLC [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC3 [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict2 [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC1 [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCABAC1 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC1 []"
"jcodec","9","org.jcodec.codecs.h264.decode.FrameReader.createSliceReader(ByteBuffer,NALUnit)","26","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testBiDirectSpatialCAVLC [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC1 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testSpatialDirect [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testBiDirectSpatialNoInference [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC3 [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict1 [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC2 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC3 [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCAVLC2 [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC2 [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC1 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x4CAVLC [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC4 [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x16CABAC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x4CAVLC [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testLongTermCAVLC [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC4 [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC5 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testMixedBiRef [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict3 []"
"jcodec","10","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.filterBs(int,int,int,byte[],byte[],int,int,int,int,int,int,boolean)","22","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x4CABAC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x8CAVLC [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC4 [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC2 [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x8CABAC [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC3 []"
"jcodec","11","org.jcodec.codecs.h264.encode.MBEncoderP16x16.luma(Picture,int[],int,int,BitWriter,int,int[])","21","org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","12","org.jcodec.codecs.h264.encode.MBEncoderI16x16.luma(Picture,int,int,BitWriter,int,Picture,CAVLC)","20","org.jcodec.codecs.h264.H264EncoderTest.testRandomImage [],org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.codecs.h264.H264EncoderTest.canEncodeYuv420J [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","13","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.calcBsV(Picture,int,int[][])","20","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x16CAVLC [],org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockShit []"
"jcodec","14","org.jcodec.common.model.Picture.createCropped(int,int,ColorSpace,Rect)","16","org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.scale.ResamplerTest.randomLanczosTest [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCABAC2 [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.codecs.png.PNGDecoderTest.testPNG [],org.jcodec.scale.ResamplerTest.randomBicubicTest []"
"jcodec","15","org.jcodec.common.tools.MathUtil.clip(int,int,int)","16","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x16CAVLC [],org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testSpatialDirect [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x8CAVLC [],org.jcodec.codecs.h264.Intra16x16PredictionBuilderTest.testDC [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x8CABAC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testLongTermCAVLC [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict3 [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.api.SequenceEncoderTest.testRuns [],org.jcodec.codecs.h264.Intra8x8PredictionBuilderTest.testVertical []"
"jcodec","16","org.jcodec.codecs.h264.decode.BlockInterpolator.initUnsafe()","15","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCABAC2 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC5 [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC3 [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict1 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC3 [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC2 [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict4 [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict3 []"
"jcodec","17","org.jcodec.codecs.h264.encode.MBEncoderP16x16.mvEstimate(Picture,int,int,int,int)","15","org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","18","org.jcodec.codecs.h264.io.CAVLC.writeACBlock(BitWriter,int,int,MBType,MBType,int[],VLC[],int,int,int[])","14","org.jcodec.codecs.h264.H264EncoderTest.testRandomImage [],org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.codecs.h264.H264EncoderTest.canEncodeYuv420J [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.api.SequenceEncoderTest.testRuns []"
"jcodec","19","org.jcodec.codecs.h264.decode.MBlock.clear()","14","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC3 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testMixedBiRefCAVLC [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC2 [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x4CAVLC []"
"jcodec","20","org.jcodec.codecs.h264.io.CABAC.initModels(int[][],SliceType,int,int)","13","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x16CABAC [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC4 [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCABAC2 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC5 [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC1 [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x8CABAC [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict4 [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC1 [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC4 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x4CABAC []"
"jcodec","21","org.jcodec.codecs.h264.encode.MotionEstimator.estimate(Picture,byte[],int,int,int,int)","13","org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","22","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.filterBlockEdgeHoris(Picture,int,int,int,int,int,int,int)","13","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testBiDirectSpatialNoInference [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockShit [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x4CAVLC [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC1 [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCAVLC2 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x4CAVLC []"
"jcodec","23","org.jcodec.codecs.h264.encode.MBDeblocker.filterBs(int,int,int,byte[],byte[],int,int,int,int,int,int)","12","org.jcodec.codecs.h264.H264EncoderTest.testRandomImage [],org.jcodec.codecs.h264.H264EncoderTest.canEncodeYuv420J [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","24","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.filterBs4(int,int,byte[],byte[],int,int,int,int,int,int,int,int,boolean)","12","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testLongTermCABAC [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC3 [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testLongTermCAVLC [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC1 []"
"jcodec","25","org.jcodec.containers.mps.MPSDemuxer.probe(ByteBuffer)","11","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.movtool.MetadataEditorTest.testInplace [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.movtool.MetadataEditorTest.testKeyedRead [],org.jcodec.movtool.MetadataEditorTest.testKeyedWriteFast [],org.jcodec.movtool.MetadataEditorTest.testKeyedWriteSlow [],org.jcodec.api.Issue49Test.testFrameGrabCanExtractOrientation []"
"jcodec","26","org.jcodec.codecs.h264.decode.MBlockDecoderInter.decode16x16(MBlock,Picture,Frame[][],PartPred)","10","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x16CAVLC [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x4CAVLC []"
"jcodec","27","org.jcodec.codecs.h264.decode.CAVLCReader.readUE(BitReader)","10","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","28","org.jcodec.codecs.h264.decode.MBlockDecoderUtils.collectPredictors(DecoderState,Picture,int)","10","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","29","org.jcodec.codecs.h264.decode.MBlockDecoderBase.decodeChroma(MBlock,int,int,boolean,boolean,Picture,int)","10","org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict2 [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC5 [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC4 [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict4 []"
"jcodec","30","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma12(byte[],int,byte[],int,int,int,int,int,int)","10","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","31","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.calcBsH(Picture,int,int[][])","10","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testSpatialDirect [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCABAC2 [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC2 []"
"jcodec","32","org.jcodec.codecs.h264.decode.SliceReader.readIntraNxN(MBlock)","10","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","33","org.jcodec.codecs.h264.encode.MBDeblocker.deblockMBP(EncodedMB,EncodedMB,EncodedMB)","10","org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","34","org.jcodec.codecs.h264.io.CAVLC.codeTableChromaDC()","9","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testSpatialDirect [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testLongTermCABAC [],org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x8CAVLC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testBiDirectSpatialNoInference [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x8CABAC [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC1 [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC4 []"
"jcodec","35","org.jcodec.codecs.h264.decode.SliceReader.readMacroblock(MBlock)","9","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","36","org.jcodec.codecs.h264.decode.SliceDecoder.decodeMacroblocks(Frame[][])","9","org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC1 []"
"jcodec","37","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.deblockFrame(Picture)","9","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockShit [],org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","38","org.jcodec.codecs.h264.io.CAVLC.readCoeffs(BitReader,VLC,VLC[],int[],int,int,int[])","9","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCAVLC1 [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict2 []"
"jcodec","39","org.jcodec.codecs.h264.decode.CoeffTransformer._idct4x4(int[],int[])","9","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x16CABAC [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.H264EncoderTest.canEncodeYuv420J [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCAVLC2 [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockShit [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC4 []"
"jcodec","40","org.jcodec.codecs.h264.H264Utils.unescapeNAL(ByteBuffer)","9","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC2 [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC1 [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCABAC1 []"
"jcodec","41","org.jcodec.codecs.h264.BufferH264ES.nextFrame()","8","org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict3 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x16CAVLC [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC4 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testBiDirectSpatialNoInferenceCAVLC [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC1 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x8CABAC []"
"jcodec","42","org.jcodec.codecs.h264.decode.MBlockDecoderIntraNxN.decode(MBlock,Picture)","8","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x8CAVLC [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC4 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testMixedBiRefCAVLC [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","43","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma03(byte[],int,byte[],int,int,int,int,int,int)","8","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","44","org.jcodec.containers.mp3.MPEGAudioDemuxer.skipJunkBB(int,ByteBuffer)","8","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.movtool.MetadataEditorTest.testKeyedRead [],org.jcodec.movtool.MetadataEditorTest.testItunesRead [],org.jcodec.movtool.MetadataEditorTest.testKeyedWriteFast [],org.jcodec.api.Issue49Test.testFrameGrabCanExtractOrientation []"
"jcodec","45","org.jcodec.codecs.h264.decode.SliceReader.readPredictionInter16x16(MBlock,int,boolean,boolean,int,PartPred)","8","org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","46","org.jcodec.codecs.common.biari.MDecoder.renormalize()","8","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC2 [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC4 [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC2 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x8CABAC []"
"jcodec","47","org.jcodec.codecs.h264.decode.BlockInterpolator.getBlockLuma(Picture,Picture,int,int,int,int,int)","8","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","48","org.jcodec.codecs.h264.decode.CAVLCReader.readUEtrace(BitReader,String)","8","org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","49","org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictDC(int[][],int,boolean,boolean,byte[],byte[],byte[])","8","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","50","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.calcBoundaryStrenth(boolean,boolean,boolean,int,int,int,int,int,int,int,int)","8","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x8CAVLC [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x8CABAC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x4CABAC []"
"jcodec","51","org.jcodec.codecs.h264.decode.MBlockDecoderUtils.copyCol(byte[],int,int,int,byte[])","7","org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","52","org.jcodec.codecs.h264.io.CABAC.readCoeffs(MDecoder,BlockType,int[],int,int,int[],int[],int[])","7","org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict2 [],org.jcodec.codecs.h264.ResidualBlockTest.testLumaDCCabac [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict4 []"
"jcodec","53","org.jcodec.codecs.h264.decode.MBlockDecoderInter.predictInter16x16(MBlock,Picture,Picture[][],int,int,boolean,boolean,boolean,boolean,MvList,int,int,PartPred)","7","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testBiDirectSpatialCAVLC [],org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","54","org.jcodec.codecs.h264.decode.CoeffTransformer.dequantizeAC(int[],int,int[])","7","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC1 [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockShit [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC2 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testBiDirectSpatialNoInferenceCAVLC [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC3 []"
"jcodec","55","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.fillVerticalEdge(Picture,int,int,int[][])","7","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockShit [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testMixedBiRef [],org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","56","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictWithMode(int,int[],boolean,boolean,boolean,byte[],byte[],byte[],int,int,int,byte[])","7","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testLongTermCABAC [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","57","org.jcodec.codecs.h264.decode.CAVLCReader.readNBit(BitReader,int,String)","6","org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict3 [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict4 [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC2 [],org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","58","org.jcodec.common.io.BitWriter.putInt(int)","6","org.jcodec.codecs.h264.H264EncoderTest.testRandomImage [],org.jcodec.codecs.h264.H264EncoderTest.canEncodeYuv420J [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","59","org.jcodec.codecs.h264.decode.MBlockDecoderInter.residualInter(MBlock,Frame[][],boolean,boolean,int,int,int)","6","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","60","org.jcodec.codecs.h264.decode.CoeffTransformer.invDC4x4(int[])","6","org.jcodec.codecs.h264.H264EncoderTest.testRandomImage [],org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.H264EncoderTest.canEncodeYuv420J [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","61","org.jcodec.codecs.h264.decode.PredictionMerger.copyPrediction(byte[],int,int,int,int,byte[])","6","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","62","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.fillHorizontalEdge(Picture,int,int,int[][])","6","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","63","org.jcodec.codecs.h264.encode.MBDeblocker.deblockMBGeneric(EncodedMB,EncodedMB,EncodedMB,int[][],int[][])","6","org.jcodec.codecs.h264.H264EncoderTest.testRandomImage [],org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.codecs.h264.H264EncoderTest.canEncodeYuv420J [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.encode.MBDeblockerTest.testMBlockGeneric []"
"jcodec","64","org.jcodec.codecs.h264.encode.MBEncoderI16x16.extractDC(int[][])","6","org.jcodec.codecs.h264.H264EncoderTest.testRandomImage [],org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.codecs.h264.H264EncoderTest.canEncodeYuv420J [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","65","org.jcodec.common.IntArrayList.set(int,int)","6","org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.codecs.h264.ResidualBlockTest.testLuma2CAVLC [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC4 [],org.jcodec.codecs.h264.Intra16x16PredictionBuilderTest.testDC [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCAVLC2 [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict3 []"
"jcodec","66","org.jcodec.common.io.VLCBuilder.setInt(int,int,int)","6","org.jcodec.codecs.mpa.Mp3DecoderTest.testOneFile [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC1 [],org.jcodec.codecs.h264.ChromaPredictionBuilderTest.testVertical [],org.jcodec.codecs.h264.ResidualBlockTest.testLuma2CAVLC [],org.jcodec.codecs.h264.Intra16x16PredictionBuilderTest.testDC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x8CABAC []"
"jcodec","67","org.jcodec.codecs.h264.io.CAVLC.readACBlock(BitReader,int[],int,int,boolean,MBType,boolean,MBType,int,int,int[])","6","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","68","org.jcodec.codecs.h264.H264Utils.escapeNAL(ByteBuffer,ByteBuffer)","6","org.jcodec.codecs.h264.H264EncoderTest.testRandomImage [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","69","org.jcodec.containers.mp4.boxes.NodeBox.findBox(Box,List<String>,Collection<Box>)","6","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.prores.ProresDecoderTest.testQuaverSize2Frames [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.containers.mp4.demuxer.MP4DemuxerTest.testVideoColor [],org.jcodec.movtool.MetadataEditorTest.testKeyedWriteSlow [],org.jcodec.api.Issue49Test.testFrameGrabCanExtractOrientation []"
"jcodec","70","org.jcodec.codecs.h264.encode.MBDeblocker._filterBs(int,int,int,byte[],byte[],int,int,int,int,int,int,boolean)","6","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","71","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma32(byte[],int,byte[],int,int,int,int,int,int)","6","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","72","org.jcodec.codecs.h264.decode.SliceReader.readResidualAC(boolean,boolean,int,MBType,int,int,int,int,int,int[])","6","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testBiDirectSpatialCAVLC [],org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC3 []"
"jcodec","73","org.jcodec.common.io.VLCBuilder.getVLC()","6","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC2 [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict2 [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC4 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x16CAVLC [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC3 [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC2 []"
"jcodec","74","org.jcodec.codecs.h264.encode.MBEncoderHelper.pubBlkOnePlane(byte[],int,byte[],int,int,int,int)","5","org.jcodec.codecs.h264.H264EncoderTest.testRandomImage [],org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.codecs.h264.H264EncoderTest.canEncodeYuv420J []"
"jcodec","75","org.jcodec.codecs.h264.encode.MBEncoderHelper.takeSubtract(byte[],int,int,int,int,int[],byte[],int,int)","5","org.jcodec.codecs.h264.H264EncoderTest.canEncodeYuv420J [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","76","org.jcodec.codecs.h264.encode.MBEncoderI16x16.save()","5","org.jcodec.codecs.h264.H264EncoderTest.testRandomImage [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","77","org.jcodec.codecs.h264.decode.SliceReader.readLuma(MBlock,boolean,boolean,int,int)","5","org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCAVLC1 [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","78","org.jcodec.codecs.h264.decode.MBlockSkipDecoder.predictPSkip(Frame[][],int,int,boolean,boolean,boolean,boolean,MvList,Picture)","5","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","79","org.jcodec.codecs.h264.decode.SliceReader.readMBlock(MBlock,SliceType)","5","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x16CABAC []"
"jcodec","80","org.jcodec.codecs.h264.decode.BlockInterpolator.initSafe()","5","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict4 [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict2 []"
"jcodec","81","org.jcodec.codecs.h264.H264Encoder.encodeSlice(SeqParameterSet,PictureParameterSet,Picture,ByteBuffer,boolean,int,SliceType,int)","5","org.jcodec.codecs.h264.H264EncoderTest.canEncodeYuv420J [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.api.SequenceEncoderTest.testRuns []"
"jcodec","82","org.jcodec.codecs.h264.decode.BlockInterpolator.getChromaXX(byte[],int,int,byte[],int,int,int,int,int,int,int,int)","5","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","83","org.jcodec.codecs.h264.decode.SliceReader.readMVD(int,boolean,boolean,MBType,MBType,PartPred,PartPred,PartPred,int,int,int,int,int,int)","5","org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","84","org.jcodec.codecs.h264.decode.SliceReader._readChromaAC(boolean,boolean,int,int[],int,MBType,boolean,int[][])","5","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","85","org.jcodec.codecs.h264.encode.MBDeblocker.filterBsChr(int,int,int,byte[],byte[],int,int,int,int)","5","org.jcodec.codecs.h264.H264EncoderTest.testRandomImage [],org.jcodec.codecs.h264.H264EncoderTest.canEncodeYuv420J [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow []"
"jcodec","86","org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.predictDC(int[][],boolean,boolean,byte[],byte[],int,byte[])","5","org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","87","org.jcodec.codecs.h264.decode.CoeffTransformer.dequantizeAC8x8(int[],int,int[])","5","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict4 []"
"jcodec","88","org.jcodec.codecs.h264.decode.MBlockDecoderBase.chromaAC(boolean,boolean,int,int,int[],int,int,MBType,boolean,int[][])","5","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC2 [],org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","89","org.jcodec.codecs.h264.decode.MBlockDecoderUtils.mergeResidual(Picture,int[][][],int[][],int[][])","5","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","90","org.jcodec.codecs.h264.io.CAVLC.writeBlockGen(BitWriter,int[],VLC[],int,int,int[],VLC)","5","org.jcodec.codecs.h264.H264EncoderTest.testRandomImage [],org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","91","org.jcodec.codecs.h264.decode.MBlockDecoderInter8x8.decode(MBlock,Frame[][],Picture,SliceType,boolean)","5","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x16CABAC [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCAVLC1 [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","92","org.jcodec.codecs.h264.io.CAVLC.writeLevels(BitWriter,int[],int,int)","5","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.api.SequenceEncoderTest.testRuns []"
"jcodec","93","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma02Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","5","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","94","org.jcodec.codecs.h264.encode.MBEncoderHelper.putBlkPic(Picture,Picture,int,int)","5","org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.codecs.h264.H264EncoderTest.canEncodeYuv420J [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","95","org.jcodec.codecs.h264.decode.SliceReader.readIntra16x16(int,MBlock)","5","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockShit []"
"jcodec","96","org.jcodec.codecs.h264.decode.SliceDecoder.putMacroblock(Picture,Picture,int,int)","5","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockShit [],org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","97","org.jcodec.codecs.h264.io.CAVLC.codeTableLuma(boolean,MBType,int,boolean,MBType,int)","5","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x4CAVLC []"
"jcodec","98","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma20UnsafeNoRound(byte[],int,int,int[],int,int,int,int,int,int)","5","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","99","org.jcodec.codecs.h264.decode.SliceDecoder.decodeMBlockIInt(MBlock,Picture)","5","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","100","org.jcodec.codecs.h264.decode.SliceReader.readChromaResidual(MBlock,boolean,boolean,int)","5","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","101","org.jcodec.codecs.h264.encode.MBDeblocker.filterBs4Chr(int,int,byte[],byte[],int,int,int,int)","4","org.jcodec.codecs.h264.H264EncoderTest.canEncodeYuv420J [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","102","org.jcodec.codecs.h264.decode.MBlockDecoderBase.residualLuma4x4(MBlock)","4","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","103","org.jcodec.common.IntArrayList.fill(int,int,int)","4","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x16CABAC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testBiDirectSpatialCAVLC [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC3 []"
"jcodec","104","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma02NoRoundInt(int[],int,int[],int,int,int,int,int,int)","4","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","105","org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.predictWithMode(int,int[][],boolean,boolean,byte[],byte[],byte[],int,byte[])","4","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","106","org.jcodec.codecs.h264.decode.FrameReader.readFrame(List<ByteBuffer>)","4","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x16CABAC [],org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","107","org.jcodec.codecs.h264.encode.MBDeblocker.deblockBorder(int[],int,byte[],int,byte[],int,int[][],int[][],boolean)","4","org.jcodec.codecs.h264.H264EncoderTest.testRandomImage [],org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","108","org.jcodec.containers.mp4.boxes.NodeBox.findAllPath(Box,Class<T>,String[])","4","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.movtool.MetadataEditorTest.testKeyedWriteSlow []"
"jcodec","109","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma00Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","4","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","110","org.jcodec.codecs.h264.encode.MBEncoderI16x16.writeAC(CAVLC,int,int,BitWriter,int,int,int[][],int,MBType,MBType,int[])","4","org.jcodec.codecs.h264.H264EncoderTest.testRandomImage [],org.jcodec.codecs.h264.H264EncoderTest.canEncodeYuv420J [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","111","org.jcodec.scale.RgbToYuv420j.transform(Picture,Picture)","4","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","112","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma10(byte[],int,byte[],int,int,int,int,int,int)","4","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","113","org.jcodec.common.model.Picture.getPlaneWidth(int)","4","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x4CABAC [],org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","114","org.jcodec.scale.Yuv420pToRgb.transform(Picture,Picture)","4","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.scale.ResamplerTest.randomLanczosTest [],org.jcodec.scale.ResamplerTest.randomBicubicTest []"
"jcodec","115","org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictVertical(int[][],int,boolean,byte[],byte[])","4","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","116","org.jcodec.codecs.h264.decode.CoeffTransformer.idct8x8(int[])","4","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict1 [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict3 []"
"jcodec","117","org.jcodec.codecs.h264.decode.MBlockSkipDecoder.decodeSkip(MBlock,Frame[][],Picture,SliceType)","4","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","118","org.jcodec.codecs.common.biari.MDecoder.decodeBin(int)","4","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC2 [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC1 [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC5 [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC3 []"
"jcodec","119","org.jcodec.codecs.h264.decode.CoeffTransformer.reorderDC4x4(int[])","4","org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCAVLC2 [],org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC []"
"jcodec","120","org.jcodec.containers.mp4.demuxer.MP4DemuxerTrack.getNextFrame(ByteBuffer)","4","org.jcodec.containers.mp4.demuxer.MP4DemuxerTest.testAudioTrack [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","121","org.jcodec.common.dct.SimpleIDCT10Bit.idctCol(int[],int)","4","org.jcodec.codecs.prores.ProresEncoderTest.testWholeThing [],org.jcodec.codecs.prores.ProresDecoderTest.testFullSize2Frames10Bit [],org.jcodec.codecs.mpeg12.SparseIDCTTest.testSparseIDCT []"
"jcodec","122","org.jcodec.common.model.Picture.getPlaneData(int)","4","org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC3 [],org.jcodec.codecs.prores.ProresDecoderTest.testFullSize2Frames10Bit [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict1 [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCABAC1 []"
"jcodec","123","org.jcodec.codecs.h264.decode.SliceReader.read16x16AC(boolean,boolean,int,int,int[],int,int,int,int)","4","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","124","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma02UnsafeNoRound(byte[],int,int,int[],int,int,int,int,int,int)","4","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","125","org.jcodec.codecs.h264.decode.SliceReader.readPredictionI4x4Block(boolean,boolean,MBType,MBType,int,int,int)","4","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","126","org.jcodec.codecs.h264.encode.MBEncoderI16x16.chroma(Picture,int,int,BitWriter,int,Picture)","4","org.jcodec.codecs.h264.H264EncoderTest.testRandomImage [],org.jcodec.codecs.h264.H264EncoderTest.canEncodeYuv420J [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","127","org.jcodec.codecs.h264.decode.SliceReader.readResidualLuma(MBlock,boolean,boolean,int,int)","4","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","128","org.jcodec.containers.mp4.demuxer.MP4DemuxerTrackMeta.fromTrack(AbstractMP4DemuxerTrack)","4","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","129","org.jcodec.common.io.BitReader.read1Bit()","4","org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC1 [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x16CAVLC [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict2 []"
"jcodec","130","org.jcodec.codecs.h264.decode.MBlockDecoderUtils.collectChromaPredictors(DecoderState,Picture,int)","4","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x4CABAC []"
"jcodec","131","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma01(byte[],int,byte[],int,int,int,int,int,int)","4","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","132","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma02(byte[],int,byte[],int,int,int,int,int,int)","4","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","133","org.jcodec.codecs.h264.io.model.MBType.isIntra()","3","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict4 []"
"jcodec","134","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma20NoRound(byte[],int,int[],int,int,int,int,int,int)","3","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","135","org.jcodec.common.IntArrayList.add(int)","3","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x16CABAC [],org.jcodec.codecs.h264.Intra16x16PredictionBuilderTest.testHorizontal [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockShit []"
"jcodec","136","org.jcodec.codecs.h264.decode.PredictionMerger.mergePrediction(SliceHeader,int,int,PartPred,int,byte[],byte[],int,int,int,int,byte[],Frame[][],int)","3","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","137","org.jcodec.codecs.h264.decode.SliceReader.readChromaAC(boolean,boolean,int,int,MBType,int[],int,int,int)","3","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","138","org.jcodec.codecs.h264.decode.BlockInterpolator.getChroma00(byte[],int,int,byte[],int,int,int,int,int,int)","3","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","139","org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictHorizontal(int[][],int,boolean,byte[],byte[])","3","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockShit []"
"jcodec","140","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma01Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","3","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","141","org.jcodec.codecs.h264.decode.MBlockDecoderUtils.saveVect(MvList,int,int,int,int)","3","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","142","org.jcodec.codecs.h264.decode.CoeffTransformer.quantizeDC4x4(int[],int)","3","org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","143","org.jcodec.codecs.prores.ProresDecoder.readACCoeffs(BitReader,int[],int[],int,int[],int,int)","3","org.jcodec.codecs.prores.ProresEncoderTest.testWholeThing10Bit [],org.jcodec.codecs.prores.ProresDecoderTest.testFullSize2Frames [],org.jcodec.codecs.prores.ProresDecoderTest.testHalfSize2Frames []"
"jcodec","144","org.jcodec.codecs.h264.H264Utils.gotoNALUnitWithArray(ByteBuffer)","3","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","145","org.jcodec.codecs.h264.decode.MBlockDecoderInter.predictInter16x8(MBlock,Picture,Picture[][],int,int,boolean,boolean,boolean,boolean,int,MvList,PartPred,PartPred,int)","3","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","146","org.jcodec.common.io.BitReader.readNBit(int)","3","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","147","org.jcodec.codecs.h264.encode.MBEncoderP16x16.chroma(Picture,int[],int[],int,int,BitWriter,int)","3","org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","148","org.jcodec.common.model.Picture.fill(int)","3","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","149","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma20Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","3","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","150","org.jcodec.codecs.h264.encode.MBEncoderHelper.takeExtendBorder(byte[],int,int,int,int,byte[],int,int)","3","org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.SequenceEncoderTest.testRuns []"
"jcodec","151","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma20(byte[],int,byte[],int,int,int,int,int,int)","3","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","152","org.jcodec.codecs.h264.decode.SliceReader.readInter16x8(PartPred,PartPred,MBlock)","3","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","153","org.jcodec.codecs.h264.io.write.CAVLCWriter.writeUE(BitWriter,int)","3","org.jcodec.codecs.h264.H264EncoderTest.canEncodeYuv420J [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","154","org.jcodec.codecs.h264.decode.CAVLCReader.readZeroBitCount(BitReader,String)","3","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict1 [],org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","155","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma03Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","3","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","156","org.jcodec.codecs.h264.decode.SliceReader.readRefIdx(boolean,boolean,MBType,MBType,PartPred,PartPred,PartPred,int,int,int,int,int,int)","3","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","157","org.jcodec.codecs.h264.decode.MBlockDecoderInter.decode8x16(MBlock,Picture,Frame[][],PartPred,PartPred)","3","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","158","org.jcodec.common.io.BitWriter.write1Bit(int)","3","org.jcodec.codecs.h264.H264EncoderTest.canEncodeYuv420J []"
"jcodec","159","org.jcodec.codecs.h264.decode.aso.FlatMBlockMapper.leftAvailable(int)","3","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","160","org.jcodec.codecs.h264.decode.MBlockDecoderInter8x8.decodeSub8x8(MBlock,int,Picture[],int,int,int,int,int,int,boolean,boolean,boolean,boolean,MvList,int,int,int,int,int,Picture,int,int)","3","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","161","org.jcodec.codecs.h264.decode.MBlockDecoderUtils.saveMvsIntra(DeblockerInput,int,int)","3","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","162","org.jcodec.codecs.h264.H264Encoder.copyCol(byte[],int,int,byte[])","3","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","163","org.jcodec.common.IntArrayList.size()","3","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.SequenceEncoderTest.testRuns [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x4CAVLC []"
"jcodec","164","org.jcodec.codecs.h264.decode.SliceReader.readCodedBlockPatternInter(boolean,boolean,int,int,MBType,MBType)","3","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.H264EncoderTest.encodeDecode []"
"jcodec","165","org.jcodec.codecs.h264.decode.MBlockDecoderInter.predictInter8x16(MBlock,Picture,Picture[][],int,int,boolean,boolean,boolean,boolean,MvList,int,PartPred,PartPred)","3","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","166","org.jcodec.common.model.Picture.getData()","3","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","167","org.jcodec.codecs.h264.encode.MBDeblocker.filterBs4(int,int,byte[],byte[],int,int,int,int,int,int,int,int)","3","org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.codecs.h264.H264EncoderTest.canEncodeYuv420J [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow []"
"jcodec","168","org.jcodec.codecs.common.biari.MDecoder.decodeBinBypass()","3","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC1 [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","169","org.jcodec.codecs.h264.decode.CoeffTransformer.fdct4x4(int[])","3","org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.codecs.h264.H264EncoderTest.canEncodeYuv420J [],org.jcodec.api.SequenceEncoderTest.testRuns []"
"jcodec","170","org.jcodec.codecs.h264.io.CAVLC.readLumaDCBlock(BitReader,int[],int,boolean,MBType,boolean,MBType,int[])","3","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","171","org.jcodec.codecs.h264.decode.MBlockDecoderUtils.saveMvs(DeblockerInput,MvList,int,int)","3","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","172","org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictDCInside(int[][],int,int,int,boolean,boolean,byte[],byte[],byte[])","3","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockShit [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict3 []"
"jcodec","173","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictVertical(int[],boolean,byte[],int,int,int,byte[])","3","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC3 [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC4 [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","174","org.jcodec.codecs.prores.ProresDecoder.readCodeword(BitReader,Codebook)","3","org.jcodec.codecs.prores.ProresEncoderTest.testWholeThing [],org.jcodec.codecs.prores.ProresDecoderTest.testQuarterSize2Frames [],org.jcodec.codecs.prores.ProresDecoderTest.testHalfSize2Frames []"
"jcodec","175","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma02NoRound(byte[],int,int[],int,int,int,int,int,int)","3","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","176","org.jcodec.codecs.h264.encode.MBEncoderP16x16.encodeMacroblock(Picture,int,int,BitWriter,EncodedMB,EncodedMB,EncodedMB,int,int)","3","org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","177","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma10Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","3","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","178","org.jcodec.common.model.Picture.planeEquals(Picture,int)","3","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","179","org.jcodec.codecs.h264.encode.MBEncoderI16x16.lumaDCPred(int,int,byte[][])","3","org.jcodec.codecs.h264.H264EncoderTest.testRandomImage [],org.jcodec.codecs.h264.H264EncoderTest.canEncodeYuv420J [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","180","org.jcodec.scale.RgbToBgr.transform(Picture,Picture)","3","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.scale.ResamplerTest.randomLanczosTest [],org.jcodec.scale.ResamplerTest.randomBicubicTest []"
"jcodec","181","org.jcodec.codecs.h264.decode.MBlockDecoderIntra16x16.decode(MBlock,Picture)","3","org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","182","org.jcodec.codecs.h264.io.write.CAVLCWriter.writeSE(BitWriter,int)","2","org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","183","org.jcodec.codecs.h264.decode.BlockInterpolator.getChromaX0(byte[],int,int,byte[],int,int,int,int,int,int,int)","2","org.jcodec.api.SequenceEncoderTest.testBufferOverflow []"
"jcodec","184","org.jcodec.containers.mkv.util.EbmlUtil.toHexString(byte[])","2","org.jcodec.containers.mkv.BlockOrderingTest.testFixedLacing []"
"jcodec","185","org.jcodec.common.model.Picture.getPlaneHeight(int)","2","org.jcodec.api.SequenceEncoderTest.testRuns [],org.jcodec.scale.ResamplerTest.randomBicubicTest []"
"jcodec","186","org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictPlane(int[][],int,boolean,boolean,byte[],byte[],byte[],byte[])","2","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","187","org.jcodec.common.model.Picture.createPicture(int,int,byte[][],ColorSpace)","2","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","188","org.jcodec.common.model.Picture.getColor()","2","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.SequenceEncoderTest.testRuns []"
"jcodec","189","org.jcodec.api.FrameGrab.detectDecoder(SeekableDemuxerTrack)","2","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","190","org.jcodec.common.logging.Logger.message(LogLevel,String,Object[])","2","org.jcodec.containers.mxf.MXFDemuxerTest.testOneMore [],org.jcodec.containers.mxf.MXFDemuxerTest.testTimecodeWithOffset2 []"
"jcodec","191","org.jcodec.codecs.h264.encode.MotionEstimator.sad(byte[],int,byte[],int,int)","2","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","192","org.jcodec.codecs.h264.H264Encoder.writeSPS(ByteBuffer,SeqParameterSet)","2","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","193","org.jcodec.codecs.h264.decode.SliceDecoder.decodeMBlockP(MBlock,Picture,Frame[][])","2","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","194","org.jcodec.codecs.h264.decode.Intra8x8PredictionBuilder.predictHorizontal(int[],boolean,byte[],byte[],int,int,int,byte[])","2","org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict4 [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","195","org.jcodec.common.io.BitReader.readFast16(int)","2","org.jcodec.codecs.prores.ProresDecoderTest.testQuarterSize2Frames [],org.jcodec.codecs.prores.ProresDecoderTest.testHalfSize2Frames []"
"jcodec","196","org.jcodec.api.FrameGrab.createFrameGrab(SeekableByteChannel)","2","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.Issue49Test.testFrameGrabCanExtractOrientation []"
"jcodec","197","org.jcodec.codecs.h264.decode.Intra8x8PredictionBuilder.predictVertical(int[],boolean,boolean,byte[],byte[],int,int,int,byte[])","2","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","198","org.jcodec.codecs.h264.decode.SliceDecoder.decode(MBlock,SliceType,Picture,Frame[][])","2","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCABAC4 []"
"jcodec","199","org.jcodec.codecs.h264.decode.MBlockDecoderBase.calcQpChroma(int,int)","2","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","200","org.jcodec.codecs.h264.encode.MBEncoderHelper.takeSafe(byte[],int,int,int,int,byte[],int,int)","2","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","201","org.jcodec.codecs.h264.decode.MBlockDecoderUtils.calcMVPredictionMedian(int,int,int,int,boolean,boolean,boolean,boolean,int,int)","2","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB8x4CABAC [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","202","org.jcodec.codecs.h264.encode.MBEncoderI16x16.predictChroma(Picture,int[][],byte[][],int,int,int)","2","org.jcodec.codecs.h264.H264EncoderTest.canEncodeYuv420J [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow []"
"jcodec","203","org.jcodec.codecs.mpeg4.MPEG4Bitstream.initVLCTables()","2","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame [],org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanIFrame []"
"jcodec","204","org.jcodec.common.dct.SimpleIDCT10Bit.idctRow(int[],int)","2","org.jcodec.codecs.mpeg12.SparseIDCTTest.testSparseIDCT []"
"jcodec","205","org.jcodec.common.dct.SimpleIDCT10Bit.idct10(int[],int)","2","org.jcodec.codecs.prores.ProresDecoderTest.testFullSize2Frames10Bit [],org.jcodec.codecs.mpeg12.SparseIDCTTest.testSparseIDCT []"
"jcodec","206","org.jcodec.codecs.prores.ProresDecoder.putBlock(byte[],byte[],int,int,int[],int,int,int)","2","org.jcodec.codecs.prores.ProresDecoderTest.testFullSize2Frames10Bit [],org.jcodec.codecs.prores.ProresDecoderTest.testFullSize2Frames []"
"jcodec","207","org.jcodec.scale.RgbToYuv420p.transform(Picture,Picture)","2","org.jcodec.scale.ResamplerTest.randomLanczosTest [],org.jcodec.scale.ResamplerTest.randomBicubicTest []"
"jcodec","208","org.jcodec.common.ArrayUtil.toByteArrayShifted(int...)","2","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockShit [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict3 []"
"jcodec","209","org.jcodec.codecs.h264.decode.PredictionMerger.weightPrediction(SliceHeader,int,int,byte[],int,int,int,int,byte[])","2","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","210","org.jcodec.containers.mp4.demuxer.AbstractMP4DemuxerTrack.nextChunk()","2","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","211","org.jcodec.common.tools.MathUtil.toSigned(int,int)","2","org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict2 [],org.jcodec.codecs.prores.ProresDecoderTest.testQuaverSize2Frames []"
"jcodec","212","org.jcodec.common.io.BitReader.checkNBit(int)","2","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanIFrame []"
"jcodec","213","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma32Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","2","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","214","org.jcodec.containers.mp4.boxes.Header.getFourcc()","2","org.jcodec.containers.mp4.demuxer.MP4DemuxerTest.testAudioTrack [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","215","org.jcodec.common.IntIntMap.put(int,int)","2","org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCABAC1 [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC1 []"
"jcodec","216","org.jcodec.codecs.h264.decode.SliceReader.setZeroCoeff(int,int,int)","2","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","217","org.jcodec.codecs.raw.RAWVideoEncoder.encodeFrame(Picture,ByteBuffer)","2","org.jcodec.codecs.raw.RawVideoEncoderTest.testInterleaved [],org.jcodec.api.SequenceEncoderTest.testSequenceEncoder []"
"jcodec","218","org.jcodec.codecs.h264.decode.SliceDecoder.fillCoeff(MBlock,int,int)","2","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","219","org.jcodec.codecs.h264.decode.SliceHeaderReader.readPart2(SliceHeader,NALUnit,SeqParameterSet,PictureParameterSet,BitReader)","2","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.MacroblockInterDecodingTest.testMBlockCABAC2 []"
"jcodec","220","org.jcodec.common.io.FileChannelWrapper.read(ByteBuffer)","2","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","221","org.jcodec.common.model.Picture.getCroppedWidth()","2","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.SequenceEncoderTest.testRuns []"
"jcodec","222","org.jcodec.codecs.h264.io.model.NALUnit.read(ByteBuffer)","2","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict2 []"
"jcodec","223","org.jcodec.common.IntObjectMap.size()","2","org.jcodec.api.FrameGrabTest.testFrameGrab [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC []"
"jcodec","224","org.jcodec.codecs.h264.io.CABAC.readCodedBlockFlagLumaAC(MDecoder,BlockType,int,int,int,MBType,MBType,boolean,boolean,int,int,int,MBType)","2","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","225","org.jcodec.common.IntArrayList.toArray()","2","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testBiDirectSpatialNoInference [],org.jcodec.codecs.h264.ResidualBlockTest.testLuma1CAVLC []"
"jcodec","226","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma21(byte[],int,byte[],int,int,int,int,int,int)","2","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","227","org.jcodec.codecs.h264.encode.MBEncoderP16x16.writeAC(int,int,int,BitWriter,int,int,int[][],int)","2","org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.SequenceEncoderTest.testBufferOverflow []"
"jcodec","228","org.jcodec.codecs.h264.decode.SliceReader.readChromaDC(int,boolean,boolean,int[],int,MBType)","2","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC4 [],org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","229","org.jcodec.platform.Platform.arrayEqualsByte(byte[],byte[])","2","org.jcodec.containers.mkv.DisplayTimecodesTest.test []"
"jcodec","230","org.jcodec.codecs.aac.AACUtils.streamInfoToADTS(ByteBuffer,boolean,int,int)","2","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","231","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictVerticalRight(int[],boolean,boolean,byte[],byte[],byte[],int,int,int,byte[])","2","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","232","org.jcodec.codecs.h264.decode.CoeffTransformer.quantizeAC(int[],int)","2","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","233","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.getIdxBeta(int,int)","2","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC2 []"
"jcodec","234","org.jcodec.codecs.h264.io.CAVLC.getCoeffTokenVLCForLuma(boolean,MBType,int,boolean,MBType,int)","2","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","235","org.jcodec.codecs.common.biari.MDecoder.decodeFinalBin()","2","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","236","org.jcodec.common.io.VLCBuilder.set(int,String)","2","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC []"
"jcodec","237","org.jcodec.codecs.mpeg4.MPEG4DCT.idctRows(short[])","2","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame [],org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanIFrame []"
"jcodec","238","org.jcodec.common.io.BitReader.check16Bits()","2","org.jcodec.codecs.prores.ProresDecoderTest.testQuarterSize2Frames [],org.jcodec.codecs.prores.ProresDecoderTest.testHalfSize2Frames []"
"jcodec","239","org.jcodec.codecs.h264.decode.MBlockDecoderIntra16x16.residualLumaI16x16(MBlock,boolean,boolean,int,int)","2","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","240","org.jcodec.codecs.h264.decode.SliceReader.getNALUnit()","2","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","241","org.jcodec.codecs.h264.decode.SliceReader.readResidualInter(MBlock,boolean,boolean,int,int)","2","org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","242","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma23Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","2","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","243","org.jcodec.codecs.h264.io.CAVLC.writeChrDCBlock(BitWriter,int[],VLC[],int,int,int[])","2","org.jcodec.api.SequenceEncoderTest.testBufferOverflow []"
"jcodec","244","org.jcodec.codecs.h264.encode.MBEncoderHelper.putBlk(byte[],int[],byte[],int,int,int,int,int)","2","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.SequenceEncoderTest.testRuns []"
"jcodec","245","org.jcodec.codecs.h264.encode.MBEncoderP16x16.median(int,int,int,int,boolean,boolean,boolean,boolean)","2","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","246","org.jcodec.common.model.Picture.cropSub(byte[],int,int,int,int,int,int,byte[])","2","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","247","org.jcodec.codecs.h264.decode.SliceReader.readMBlockI(MBlock)","2","org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCABACStrict2 [],org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","248","org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictDCTopBorder(int[][],int,int,int,boolean,boolean,byte[],byte[],byte[])","2","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","249","org.jcodec.codecs.mpeg4.MPEG4Interpolator.fulpel16x16(byte[],byte[],int,int,int,int,int)","2","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","250","org.jcodec.codecs.h264.decode.MBlockDecoderUtils.savePrediction8x8(DecoderState,int,MvList)","2","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","251","org.jcodec.codecs.h264.io.CABAC.readRefIdx(MDecoder,boolean,boolean,MBType,MBType,PartPred,PartPred,PartPred,int,int,int,int,int,int)","2","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","252","org.jcodec.common.io.NIOUtils.read(ByteBuffer,int)","2","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.movtool.MetadataEditorTest.testKeyedWriteSlow []"
"jcodec","253","org.jcodec.containers.mp4.BoxFactory.newBox(Header)","2","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.containers.mp4.SampleOffsetUtilsTest.testGetSamplesInChunk []"
"jcodec","254","org.jcodec.codecs.h264.H264Encoder.collectPredictors(Picture,int)","2","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","255","org.jcodec.codecs.h264.decode.Intra8x8PredictionBuilder.predictWithMode(int,int[],boolean,boolean,boolean,boolean,byte[],byte[],byte[],int,int,int,byte[])","2","org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","256","org.jcodec.api.transcode.filters.ColorTransformFilter.filter(Picture,PixelStore)","2","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","257","org.jcodec.codecs.png.PNGDecoder.filterPaeth(byte[],int,byte[],int)","2","org.jcodec.codecs.png.PNGDecoderTest.testPNG []"
"jcodec","258","org.jcodec.codecs.h264.H264Encoder.putLastMBLine()","2","org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","259","org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.predictVertical(int[][],boolean,byte[],int,byte[])","2","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer [],org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","260","org.jcodec.common.io.BitReader.checkNBitDontCare(int)","2","org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanIFrame []"
"jcodec","261","org.jcodec.codecs.h264.encode.MBEncoderI16x16.encodeMacroblock(Picture,int,int,BitWriter,EncodedMB,EncodedMB,EncodedMB,int,int)","2","org.jcodec.codecs.h264.H264EncoderTest.canEncodeYuv420J [],org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","262","org.jcodec.containers.mxf.model.UL.toString()","2","org.jcodec.containers.mxf.MXFDemuxerTest.testTimecodeWithOffset []"
"jcodec","263","org.jcodec.codecs.mpeg12.MPEGPredOct.getPix6(byte[],int,int,int,int,int,int,int[])","2","org.jcodec.codecs.mpeg12.MPEGPredOctTest.testUnsafe []"
"jcodec","264","org.jcodec.codecs.h264.decode.MBlockDecoderBase.decodeChromaResidual(MBlock,boolean,boolean,int,int,int,int)","2","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","265","org.jcodec.codecs.h264.decode.CoeffTransformer.dequantizeDC4x4(int[],int,int[])","2","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException [],org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockShit []"
"jcodec","266","org.jcodec.codecs.h264.BufferH264ES.detectPoc(ByteBuffer,NALUnit,SliceHeader)","2","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB16x8CAVLC [],org.jcodec.codecs.h264.MacroblockBiDecodingTest.testMixedBiRefCAVLC []"
"jcodec","267","org.jcodec.containers.mp4.boxes.MetaBox.MetaValue>getKeyedMeta()","2","org.jcodec.movtool.MetadataEditorTest.testKeyedWriteSlow []"
"jcodec","268","org.jcodec.common.dct.SparseIDCT.finish(int[])","2","org.jcodec.codecs.mpeg12.SparseIDCTTest.testSparseIDCT []"
"jcodec","269","org.jcodec.codecs.h264.encode.MBDeblocker.deblockBorderChroma(int[],int,byte[],int,byte[],int,int[][],int[][],boolean)","2","org.jcodec.codecs.h264.H264EncoderTest.encodeDecode [],org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","270","org.jcodec.codecs.h264.decode.SliceReader.readLuma8x8CAVLC(MBlock,boolean,boolean,int,int)","2","org.jcodec.codecs.h264.ScalingListTest.testScalingList [],org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict2 []"
"jcodec","271","org.jcodec.containers.mp3.MPEGAudioDemuxer.validHeader(int)","2","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.movtool.MetadataEditorTest.testItunesRead []"
"jcodec","272","org.jcodec.codecs.h264.decode.aso.FlatMBlockMapper.topRightAvailable(int)","2","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","273","org.jcodec.common.StringUtils.splitC(String,char)","2","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio [],org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","274","org.jcodec.codecs.h264.decode.SliceReader.readMBlockP(MBlock)","2","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","275","org.jcodec.common.JCodecUtil2.readBER32(ByteBuffer)","2","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","276","org.jcodec.common.io.BitReader.readInt()","2","org.jcodec.api.SequenceEncoderTest.testBufferOverflow [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","277","org.jcodec.common.io.BitReader.skip(int)","2","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException [],org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","278","org.jcodec.common.model.Picture.getHeight()","1","org.jcodec.api.SequenceEncoderTest.testBufferOverflow []"
"jcodec","279","org.jcodec.codecs.h264.io.model.SeqParameterSet.readVUIParameters(BitReader)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","280","org.jcodec.codecs.mpeg4.MPEG4Interpolator.vertMiddle16Safe(byte[],byte[],int,int,int,int)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","281","org.jcodec.containers.mxf.model.KLV.readKL(SeekableByteChannel)","1","org.jcodec.containers.mxf.MXFDemuxerTest.testOneMore []"
"jcodec","282","org.jcodec.containers.mp4.muxer.CodecMP4MuxerTrack.addFrame(Packet)","1","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","283","org.jcodec.codecs.mpeg4.MPEG4Bitstream.readBi(BitReader,MPEG4DecodingContext,int,int,Macroblock,Macroblock,Vector,Vector)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","284","org.jcodec.codecs.prores.ProresToThumb2x2.putGroup(byte[],byte[],int,int[],int)","1","org.jcodec.codecs.prores.ProresDecoderTest.testQuarterSize2Frames []"
"jcodec","285","org.jcodec.codecs.h264.io.CABAC.readSubMbTypeP(MDecoder)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","286","org.jcodec.common.io.BitReader.bitsToAlign()","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanIFrame []"
"jcodec","287","org.jcodec.codecs.h264.io.CAVLC.totalCoeff(int)","1","org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict1 []"
"jcodec","288","org.jcodec.codecs.mpeg4.MPEG4Bitstream.checkResyncMarker(BitReader,int)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanIFrame []"
"jcodec","289","org.jcodec.api.transcode.VideoFrameWithPacket.compareTo(VideoFrameWithPacket)","1","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","290","org.jcodec.common.io.DummyBitstreamReader.read1BitInt()","1","org.jcodec.common.io.TestBitReader.testRandom1Bit []"
"jcodec","291","org.jcodec.codecs.mpeg4.MPEG4Bitstream.readInterModeCoeffs(BitReader,MPEG4DecodingContext,int,Macroblock,Macroblock,Macroblock,Macroblock,Macroblock)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","292","org.jcodec.common.Assert.assertEquals(int,int)","1","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","293","org.jcodec.codecs.h264.decode.SliceReader.readIntra8x16(PartPred,PartPred,MBlock)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","294","org.jcodec.common.io.BitWriter.position()","1","org.jcodec.api.SequenceEncoderTest.testBufferOverflow []"
"jcodec","295","org.jcodec.codecs.h264.decode.CoeffTransformer.quantizeDC2x2(int[],int)","1","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","296","org.jcodec.containers.mxf.model.KLV.readKLFromBuffer(ByteBuffer,long)","1","org.jcodec.containers.mxf.MXFDemuxerTest.testOneMore []"
"jcodec","297","org.jcodec.codecs.prores.ProresDecoder.decodeSlice(ByteBuffer,int[],int[],int[],int,int,int,short,byte[][],byte[][],int,int,int)","1","org.jcodec.codecs.prores.ProresDecoderTest.testFullSize2Frames10Bit []"
"jcodec","298","org.jcodec.codecs.h264.io.model.SeqParameterSet.read(ByteBuffer)","1","org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCAVLC3 []"
"jcodec","299","org.jcodec.codecs.h264.decode.PredictionMerger.weight(byte[],int,int,int,int,int,int,int,byte[])","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","300","org.jcodec.codecs.png.PNGDecoder.filterUp(byte[],int,byte[])","1","org.jcodec.codecs.png.PNGDecoderTest.testPNG []"
"jcodec","301","org.jcodec.codecs.h264.io.model.RefPicMarkingIDR.isUseForlongTerm()","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","302","org.jcodec.codecs.h264.io.CAVLC.writeTrailingOnes(BitWriter,int[],int,int)","1","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","303","org.jcodec.common.ArrayUtil.sumByte3(byte[],int,int)","1","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","304","org.jcodec.codecs.mpa.ChannelSynthesizer.synthesize(float[],short[],int)","1","org.jcodec.codecs.mpa.Mp3DecoderTest.testOneFile []"
"jcodec","305","org.jcodec.common.tools.MathUtil.log2(int)","1","org.jcodec.codecs.prores.ProresEncoderTest.testWholeThing []"
"jcodec","306","org.jcodec.codecs.h264.BufferH264ES.calcPoc(int,NALUnit,SliceHeader)","1","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testLongTermCAVLC []"
"jcodec","307","org.jcodec.codecs.mpa.Mp3Decoder.mdctDecode(int,Granule,float[])","1","org.jcodec.codecs.mpa.Mp3DecoderTest.testOneFile []"
"jcodec","308","org.jcodec.codecs.h264.decode.CoeffTransformer.dequantizeDC2x2(int[],int,int[])","1","org.jcodec.api.SequenceEncoderTest.testBufferOverflow []"
"jcodec","309","org.jcodec.containers.mkv.SeekHeadFactory.estimeteSeekSize(int,int)","1","org.jcodec.containers.mkv.SeekHeadFactoryTest.printSizeOptions []"
"jcodec","310","org.jcodec.codecs.h264.decode.MBlockDecoderBase.chromaDC(int,boolean,boolean,int[],int,int,MBType)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","311","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma23(byte[],int,byte[],int,int,int,int,int,int)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","312","org.jcodec.common.io.BitReader.nextIgnore()","1","org.jcodec.api.SequenceEncoderTest.testBufferOverflow []"
"jcodec","313","org.jcodec.codecs.h264.io.CABAC.readCodedBlockFlagChromaDC(MDecoder,int,int,MBType,MBType,boolean,boolean,int,int,MBType)","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","314","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma30Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","315","org.jcodec.codecs.h264.io.CAVLC.writeRuns(BitWriter,int[],int,int)","1","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","316","org.jcodec.codecs.h264.io.CABAC.readMBSkipFlag(MDecoder,SliceType,boolean,boolean,int)","1","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","317","org.jcodec.codecs.prores.ProresEncoder.writeACCoeffs(BitWriter,int[],int[],int,int[],int)","1","org.jcodec.codecs.prores.ProresEncoderTest.testWholeThing10Bit []"
"jcodec","318","org.jcodec.codecs.h264.io.CABAC.readCoeffAbsLevel(MDecoder,BlockType,int,int)","1","org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC3 []"
"jcodec","319","org.jcodec.common.IntIntMap.createArray(int)","1","org.jcodec.codecs.h264.MBlock8x8Test.testMBlockCAVLCStrict3 []"
"jcodec","320","org.jcodec.codecs.mpa.MpaPqmf.computeFilter(int,float[],short[],int,float)","1","org.jcodec.codecs.mpa.Mp3DecoderTest.testOneFile []"
"jcodec","321","org.jcodec.containers.mp3.MPEGAudioDemuxer.skipJunk()","1","org.jcodec.containers.mp3.MPEGAudioDemuxerTest.testParseCBR []"
"jcodec","322","org.jcodec.codecs.h264.H264Decoder.decodeFrame(ByteBuffer,byte[][])","1","org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","323","org.jcodec.common.tools.Debug.trace(Object...)","1","org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","324","org.jcodec.codecs.h264.decode.SliceReader.readChromaPredMode(int,boolean,boolean)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","325","org.jcodec.common.model.Rect.getWidth()","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","326","org.jcodec.common.AutoFileChannelWrapper.read(ByteBuffer)","1","org.jcodec.containers.mp4.demuxer.MP4DemuxerTest.testAudioTrack []"
"jcodec","327","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma30(byte[],int,byte[],int,int,int,int,int,int)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","328","org.jcodec.containers.mkv.MKVType.createById(byte[],long)","1","org.jcodec.containers.mkv.CompareFramesTest.testReadFrames []"
"jcodec","329","org.jcodec.codecs.mpa.Mp3Bitstream.readCoeffs(BitReader,Granule,int,int,int,int[])","1","org.jcodec.codecs.mpa.Mp3DecoderTest.testOneFile []"
"jcodec","330","org.jcodec.containers.mp4.demuxer.MP4DemuxerTrackMeta.getCodecPrivate(AbstractMP4DemuxerTrack)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","331","org.jcodec.codecs.h264.H264Encoder.encodeMacroblock(MBType,Picture,int,int,BitWriter,int,int)","1","org.jcodec.api.SequenceEncoderTest.testBufferOverflow []"
"jcodec","332","org.jcodec.codecs.aac.ADTSParser.read(ByteBuffer)","1","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","333","org.jcodec.codecs.h264.decode.BlockInterpolator.getChromaX0Unsafe(byte[],int,int,byte[],int,int,int,int,int,int,int)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","334","org.jcodec.codecs.h264.decode.CAVLCReader.readSE(BitReader,String)","1","org.jcodec.api.SequenceEncoderTest.testBufferOverflow []"
"jcodec","335","org.jcodec.codecs.h264.io.CABAC.prev4x4PredModeFlag(MDecoder)","1","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","336","org.jcodec.containers.mp4.boxes.NodeBox.findFirstPath(NodeBox,Class<T>,String[])","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","337","org.jcodec.scale.LanczosResampler.buildTaps(int,int,double,short[][])","1","org.jcodec.scale.ResamplerTest.randomLanczosTest []"
"jcodec","338","org.jcodec.containers.mp4.boxes.NodeBox.findFirst(NodeBox,Class<T>,String)","1","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","339","org.jcodec.codecs.h264.io.CAVLC.readChromaDCBlock(BitReader,int[],boolean,boolean)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","340","org.jcodec.codecs.h264.encode.MBEncoderI16x16.chromaPredBlk1(int,int,int,byte[])","1","org.jcodec.api.SequenceEncoderTest.testBufferOverflow []"
"jcodec","341","org.jcodec.containers.mp3.MPEGAudioDemuxer.calcFrameSize(int)","1","org.jcodec.movtool.MetadataEditorTest.testKeyedRead []"
"jcodec","342","org.jcodec.codecs.h264.decode.SliceReader.readInter16x16(PartPred,MBlock)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","343","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma22(byte[],int,byte[],int,int,int,int,int,int)","1","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","344","org.jcodec.codecs.h264.decode.SliceDecoder.decodeFromReader(SliceReader)","1","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockCAVLC2 []"
"jcodec","345","org.jcodec.codecs.png.PNGDecoder.filterAvg3(byte[],byte[],int)","1","org.jcodec.codecs.png.PNGDecoderTest.testPNG []"
"jcodec","346","org.jcodec.codecs.h264.H264Const.usesList(PartPred,int)","1","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","347","org.jcodec.codecs.h264.decode.SliceReader.readSub8x8(MBlock,int,boolean,boolean,int,int,int,MBType,MBType,PartPred,PartPred,PartPred,int)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","348","org.jcodec.containers.mkv.MKVParser.nextElement()","1","org.jcodec.containers.mkv.MKVDemuxerTest.testPosition []"
"jcodec","349","org.jcodec.codecs.h264.encode.MBEncoderI16x16.transform(Picture,int,int[][],byte[][],int,int)","1","org.jcodec.api.SequenceEncoderTest.testBufferOverflow []"
"jcodec","350","org.jcodec.scale.BaseResampler.getPel(Picture,int,int,int)","1","org.jcodec.scale.ResamplerTest.randomLanczosTest []"
"jcodec","351","org.jcodec.codecs.h264.decode.MBlockDecoderBase.residualLuma8x8CAVLC(MBlock)","1","org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","352","org.jcodec.codecs.h264.decode.MBlockDecoderBDirect.predictBSpatialDirect(Frame[][],int,int,boolean,boolean,boolean,boolean,MvList,PartPred[],Picture,int[])","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","353","org.jcodec.codecs.h264.io.CABAC.readMBQpDelta(MDecoder,MBType)","1","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockShit []"
"jcodec","354","org.jcodec.scale.BaseResampler.normalizeAndGenerateFixedPrecision(double[],int,short[])","1","org.jcodec.scale.ResamplerTest.randomLanczosTest []"
"jcodec","355","org.jcodec.containers.mkv.boxes.MkvBlock.read(ByteBuffer)","1","org.jcodec.containers.mkv.MKVDemuxerTest.testPosition []"
"jcodec","356","org.jcodec.common.IntObjectMap.keys()","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","357","org.jcodec.codecs.h264.decode.CoeffTransformer.invDC2x2(int[])","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","358","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma20NoRoundInt(int[],int,int[],int,int,int,int,int,int)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","359","org.jcodec.codecs.mpa.MpaHeader.calculateFramesize(MpaHeader)","1","org.jcodec.codecs.mpa.Mp3DecoderTest.testOneFile []"
"jcodec","360","org.jcodec.platform.Platform.newInstance(Class<T>,Object[])","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","361","org.jcodec.containers.mp4.demuxer.MP4DemuxerTrack.nextFrame()","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","362","org.jcodec.containers.mkv.MKVType.values()","1","org.jcodec.containers.mkv.MKVDemuxerTest.testPosition []"
"jcodec","363","org.jcodec.containers.mp4.boxes.MovieBox.getMovieHeader()","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","364","org.jcodec.containers.mp4.boxes.Box.path(String)","1","org.jcodec.codecs.prores.ProresDecoderTest.testQuarterSize2Frames []"
"jcodec","365","org.jcodec.codecs.h264.encode.DumbRateControl.accept(int)","1","org.jcodec.codecs.h264.H264EncoderTest.encodeDecode []"
"jcodec","366","org.jcodec.codecs.h264.decode.BlockInterpolator.getChromaXXUnsafe(byte[],int,int,byte[],int,int,int,int,int,int,int,int)","1","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","367","org.jcodec.containers.mp4.ChunkWriter.write(Chunk)","1","org.jcodec.movtool.MetadataEditorTest.testKeyedWriteSlow []"
"jcodec","368","org.jcodec.codecs.h264.decode.RefListManager.getRefList()","1","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","369","org.jcodec.codecs.png.PNGDecoder.decodeData(IHDR,PLTE,TRNS,List<ByteBuffer>,byte[][])","1","org.jcodec.codecs.png.PNGDecoderTest.testPNG []"
"jcodec","370","org.jcodec.common.io.NIOUtils.fetchFromChannel(ReadableByteChannel,int)","1","org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC []"
"jcodec","371","org.jcodec.codecs.h264.io.model.SeqParameterSet.getPicHeightInMbs(SeqParameterSet)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","372","org.jcodec.codecs.h264.H264Utils.wipePSinplace(ByteBuffer,Collection<ByteBuffer>,Collection<ByteBuffer>)","1","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","373","org.jcodec.codecs.h264.decode.SliceReader.readCodedBlockPatternIntra(boolean,boolean,int,int,MBType,MBType)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","374","org.jcodec.codecs.h264.H264Utils.saveCodecPrivate(List<ByteBuffer>,List<ByteBuffer>)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","375","org.jcodec.codecs.mpeg4.MPEG4Bitstream.packCoeff(int,int,int)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanIFrame []"
"jcodec","376","org.jcodec.codecs.png.PNGDecoder.filterSub4(byte[],byte[],int)","1","org.jcodec.codecs.png.PNGDecoderTest.testPNG []"
"jcodec","377","org.jcodec.codecs.h264.encode.MBEncoderI16x16.transformChroma(int[][])","1","org.jcodec.codecs.h264.H264EncoderTest.canEncodeYuv420J []"
"jcodec","378","org.jcodec.common.model.ColorSpace.calcBitsPerPixel()","1","org.jcodec.codecs.h264.ResidualBlockTest.testChromaAC3CAVLC []"
"jcodec","379","org.jcodec.containers.mp4.boxes.TrakBox.getCodedSize()","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","380","org.jcodec.codecs.h264.decode.SliceReader.read16x16DC(boolean,boolean,int,int[])","1","org.jcodec.codecs.h264.MacroblockIntraMixedDecodingTest.testMBlockShit []"
"jcodec","381","org.jcodec.containers.mp4.boxes.UdtaBox.setFactory(IBoxFactory)","1","org.jcodec.containers.mp4.demuxer.MP4DemuxerTest.testDefaultSampleSize []"
"jcodec","382","org.jcodec.codecs.mpeg4.MPEG4BiRenderer.mergePred(Macroblock)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","383","org.jcodec.scale.Yuv420pToRgb.YUV420pToRGBN2N(byte,byte,byte,byte[],int)","1","org.jcodec.api.SequenceEncoderTest.testBufferOverflow []"
"jcodec","384","org.jcodec.common.io.NIOUtils.skip(ByteBuffer,int)","1","org.jcodec.containers.mp4.boxes.TrunBoxTest.testReadWriteCreate []"
"jcodec","385","org.jcodec.codecs.h264.H264Encoder.encodeFrame(Picture,ByteBuffer)","1","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","386","org.jcodec.containers.mp4.boxes.AudioSampleEntry.getEndian()","1","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","387","org.jcodec.codecs.h264.io.CABAC.codedBlockPatternIntra(MDecoder,boolean,boolean,int,int,MBType,MBType)","1","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","388","org.jcodec.platform.Platform.arrayEqualsObj(Object[],Object[])","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","389","org.jcodec.codecs.h264.decode.MBlock.cbpLuma()","1","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testB4x4CAVLC []"
"jcodec","390","org.jcodec.codecs.mpeg4.MPEG4Interpolator.horzMiddle8(byte[],int,byte[],int,int,int,int,int,int,int)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","391","org.jcodec.codecs.h264.io.CABAC.readMVD(MDecoder,int,boolean,boolean,MBType,MBType,PartPred,PartPred,PartPred,int,int,int,int,int,int)","1","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","392","org.jcodec.codecs.h264.decode.MBlockDecoderBase.initScalingMatrix(SliceHeader)","1","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testBiDirectSpatialNoInference []"
"jcodec","393","org.jcodec.codecs.h264.decode.PredictionMerger.mergeWeight(byte[],byte[],int,PartPred,int,int,int,int,int,int,int,int,byte[])","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","394","org.jcodec.codecs.h264.decode.BlockInterpolator.merge(byte[],byte[],int,int,int,int)","1","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","395","org.jcodec.codecs.h264.encode.EncodedMB.getMx()","1","org.jcodec.api.SequenceEncoderTest.testRuns []"
"jcodec","396","org.jcodec.common.io.FileChannelWrapper.setPosition(long)","1","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","397","org.jcodec.common.IntIntMap.get(int)","1","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","398","org.jcodec.codecs.h264.decode.Intra8x8PredictionBuilder.copyAdd(byte[],int,int[],int,int,byte[])","1","org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","399","org.jcodec.codecs.prores.ProresToThumb2x2._putChroma(byte[],byte[],int,int,int,int,int[],int,int,int)","1","org.jcodec.codecs.prores.ProresDecoderTest.testQuarterSize2Frames []"
"jcodec","400","org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.predictHorizontal(int[][],boolean,byte[],int,byte[])","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","401","org.jcodec.containers.mp4.boxes.AudioSampleEntry.getFormat()","1","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","402","org.jcodec.common.dct.IntDCT.prepare_range_limit_table()","1","org.jcodec.common.dct.IntDCTTest.testDescale []"
"jcodec","403","org.jcodec.containers.mp3.MPEGAudioDemuxer.getField(int,int)","1","org.jcodec.movtool.MetadataEditorTest.testInplace []"
"jcodec","404","org.jcodec.codecs.h264.io.CABAC.readIntraChromaPredMode(MDecoder,int,MBType,MBType,boolean,boolean)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","405","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma12Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","406","org.jcodec.common.io.BitWriter.writeNBit(int,int)","1","org.jcodec.codecs.h264.H264EncoderTest.testRandomImage []"
"jcodec","407","org.jcodec.codecs.h264.decode.SliceReader.readPredictionInter16x8(MBlock,int,boolean,boolean,PartPred,PartPred,int)","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","408","org.jcodec.containers.mps.MPSUtils.mpeg2Pes(int,int,int,ByteBuffer,long)","1","org.jcodec.containers.mps.index.MPSIndexerTest.testInterleavedLengthPresentPtsPresent []"
"jcodec","409","org.jcodec.codecs.raw.RAWVideoDecoder.copy(ByteBuffer,byte[],int)","1","org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","410","org.jcodec.common.dct.IDCT2x2.idct(int[],int)","1","org.jcodec.codecs.prores.ProresDecoderTest.testQuarterSize2Frames []"
"jcodec","411","org.jcodec.codecs.mpeg4.MPEG4Interpolator.vertMiddle8Safe(byte[],int,byte[],int,int,int,int)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","412","org.jcodec.common.model.Picture.getLowBitsNum()","1","org.jcodec.api.SequenceEncoderTest.testBufferOverflow []"
"jcodec","413","org.jcodec.codecs.h264.decode.SliceReader.readLuma8x8CABAC(MBlock,int,int)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","414","org.jcodec.codecs.mpeg4.MPEG4Decoder.decodeIFrame(BitReader,MPEG4DecodingContext,byte[][])","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanIFrame []"
"jcodec","415","org.jcodec.containers.mp4.boxes.Box.write(ByteBuffer)","1","org.jcodec.containers.mp4.muxer.MP4MuxerTest.testAddTrackWithSameId []"
"jcodec","416","org.jcodec.codecs.h264.io.model.SliceType.isInter()","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","417","org.jcodec.containers.mp4.boxes.NodeBox.getBoxes()","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","418","org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.predictPlane(int[][],boolean,boolean,byte[],byte[],byte[],int,byte[])","1","org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","419","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma33Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","420","org.jcodec.codecs.common.biari.MDecoder.readOneByte()","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","421","org.jcodec.codecs.h264.decode.Intra8x8PredictionBuilder.interpolateTop(boolean,boolean,byte[],byte[],int,int,byte[])","1","org.jcodec.codecs.h264.ScalingListTest.testScalingList []"
"jcodec","422","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma11(byte[],int,byte[],int,int,int,int,int,int)","1","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","423","org.jcodec.common.io.DummyBitstreamReader.readNBit(int)","1","org.jcodec.common.io.TestBitReader.testRandomNBit []"
"jcodec","424","org.jcodec.containers.mxf.model.UL.equals(Object)","1","org.jcodec.containers.mxf.MXFDemuxerTest.testMxfTimecode []"
"jcodec","425","org.jcodec.codecs.h264.decode.MBlockDecoderBase.residualLuma8x8CABAC(MBlock)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","426","org.jcodec.codecs.h264.decode.SliceReader.readSubMb8x8(MBlock,int,int,boolean,boolean,int,int,int,MBType,MBType,MBType,PartPred,PartPred,PartPred,int)","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","427","org.jcodec.containers.mkv.CuesFactory.estimateCuePointSize(int,int,int)","1","org.jcodec.containers.mkv.CuesFactoryTest.testEntryLength []"
"jcodec","428","org.jcodec.codecs.mpeg4.MPEG4Interpolator.interpolate16x16QP(byte[],byte[],int,int,int,int,int,int,int,boolean)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","429","org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.mvThresh(int,int)","1","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testBiDirectSpatialCAVLC []"
"jcodec","430","org.jcodec.codecs.mpeg4.MPEG4DCT.idctPut(byte[][],short[][],boolean)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanIFrame []"
"jcodec","431","org.jcodec.containers.mp4.boxes.MediaHeaderBox.parse(ByteBuffer)","1","org.jcodec.codecs.prores.ProresDecoderTest.testQuaverSize2Frames []"
"jcodec","432","org.jcodec.codecs.h264.encode.MBEncoderI16x16.putChroma(byte[],int,int,int,int[][],byte[][])","1","org.jcodec.codecs.h264.H264EncoderTest.canEncodeYuv420J []"
"jcodec","433","org.jcodec.codecs.h264.decode.MBlockDecoderInter.calcMVPrediction16x8Top(int,int,int,int,boolean,boolean,boolean,boolean,int,int)","1","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","434","org.jcodec.containers.mp3.MPEGAudioDemuxer.readFrame(ByteBuffer)","1","org.jcodec.containers.mp3.MPEGAudioDemuxerTest.testParseCBR []"
"jcodec","435","org.jcodec.codecs.mpeg4.MPEG4Renderer.renderMBInter(MPEG4DecodingContext,Picture[],Macroblock,int,boolean)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","436","org.jcodec.codecs.mpeg4.MPEG4Interpolator.horzMiddle16(byte[],byte[],int,int,int,int,int,int,int)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","437","org.jcodec.containers.mp4.MP4Util.getRootAtoms(SeekableByteChannel)","1","org.jcodec.codecs.prores.ProresDecoderTest.testQuaverSize2Frames []"
"jcodec","438","org.jcodec.codecs.h264.decode.CoeffTransformer.fvdDC4x4(int[])","1","org.jcodec.codecs.h264.H264EncoderTest.testBufferOverflowImage []"
"jcodec","439","org.jcodec.codecs.h264.encode.MBEncoderI16x16.restorePlane(int[],int[][],int)","1","org.jcodec.api.SequenceEncoderTest.testBufferOverflow []"
"jcodec","440","org.jcodec.containers.mxf.model.UL.hashCode()","1","org.jcodec.containers.mxf.MXFDemuxerTest.testTimecodeWithOffset2 []"
"jcodec","441","org.jcodec.codecs.h264.H264Utils.skipToNALUnit(ByteBuffer)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","442","org.jcodec.containers.mp4.boxes.TimeToSampleBox.parse(ByteBuffer)","1","org.jcodec.containers.mp4.SampleOffsetUtilsTest.testGetChunkBySample []"
"jcodec","443","org.jcodec.codecs.h264.H264Utils.isByteBufferIDRSlice(ByteBuffer)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","444","org.jcodec.codecs.h264.encode.MBEncoderHelper.take(byte[],int,int,int,int,byte[],int,int)","1","org.jcodec.api.SequenceEncoderTest.testBufferOverflow []"
"jcodec","445","org.jcodec.common.dct.SimpleIDCT10Bit.fdctProres10(int[],int)","1","org.jcodec.codecs.prores.ProresEncoderTest.testWholeThing10Bit []"
"jcodec","446","org.jcodec.codecs.mpa.Mp3Decoder.dequantShort(int[],int,Granule,ScaleFactors,float,float[])","1","org.jcodec.codecs.mpa.Mp3DecoderTest.testOneFile []"
"jcodec","447","org.jcodec.containers.mp4.boxes.TrakBox.getTrackType(TrakBox)","1","org.jcodec.containers.mp4.demuxer.MP4DemuxerTest.testRawDemuxer []"
"jcodec","448","org.jcodec.codecs.h264.decode.MBlock.cbp(int,int)","1","org.jcodec.api.Issue136Test.testFrameGrabDoesNotThrowException []"
"jcodec","449","org.jcodec.codecs.h264.decode.BlockInterpolator.getChroma00Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)","1","org.jcodec.api.SequenceEncoderTest.testBufferOverflow []"
"jcodec","450","org.jcodec.containers.mp4.boxes.TrakBox.getEdits()","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","451","org.jcodec.codecs.h264.H264Decoder.createFrame(SeqParameterSet,byte[][],int,SliceType,MvList2D,Frame[][][],int)","1","org.jcodec.codecs.h264.MacroblockI16x16DecodingTest.testMBlockCABAC3 []"
"jcodec","452","org.jcodec.codecs.h264.decode.BlockInterpolator.getChroma0XUnsafe(byte[],int,int,byte[],int,int,int,int,int,int,int)","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
"jcodec","453","org.jcodec.codecs.mpeg4.MPEG4Bitstream.readCoeffIntra(BitReader,MPEG4DecodingContext,Macroblock,Macroblock,Macroblock,Macroblock)","1","org.jcodec.codecs.mpeg4.MPEG4DecoderTest.testForemanPFrame []"
"jcodec","454","org.jcodec.common.StringUtils.splitWorker(String,char,boolean)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","455","org.jcodec.codecs.h264.BufferH264ES.readSliceHeader(ByteBuffer,NALUnit)","1","org.jcodec.codecs.h264.MacroblockINxNDecodingTest.testMBlockCAVLC3 []"
"jcodec","456","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictDiagonalDownLeft(int[],boolean,boolean,byte[],int,int,int,byte[])","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","457","org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma33(byte[],int,byte[],int,int,int,int,int,int)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","458","org.jcodec.common.model.Picture.equals(Object)","1","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","459","org.jcodec.codecs.h264.io.model.NALUnitType.fromValue(int)","1","org.jcodec.codecs.h264.MacroblockBiDecodingTest.testLongTermCABAC []"
"jcodec","460","org.jcodec.codecs.h264.io.CAVLC.trailingOnes(int)","1","org.jcodec.api.SequenceEncoderTest.testBufferOverflow []"
"jcodec","461","org.jcodec.containers.mp4.muxer.MP4MuxerTrack.finish(MovieHeaderBox)","1","org.jcodec.containers.mp4.muxer.MP4MuxerTest.testAddEmptyTracks []"
"jcodec","462","org.jcodec.common.model.Picture.getCrop()","1","org.jcodec.scale.ResamplerTest.randomBicubicTest []"
"jcodec","463","org.jcodec.codecs.png.PNGDecoder.filterSub1(byte[],byte[],int)","1","org.jcodec.codecs.png.PNGDecoderTest.testPNG []"
"jcodec","464","org.jcodec.codecs.h264.H264Encoder.doEncodeFrame(Picture,ByteBuffer,boolean,int,SliceType)","1","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","465","org.jcodec.containers.mp4.muxer.MP4MuxerTrack.outChunkIfNeeded(int)","1","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","466","org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictHorizontalDown(int[],boolean,boolean,byte[],byte[],byte[],int,int,int,byte[])","1","org.jcodec.api.Issue180Test.testFrameGrabDoesNotThrowException []"
"jcodec","467","org.jcodec.common.dct.DCTRef.fdct(int[],int)","1","org.jcodec.codecs.mpeg12.SparseIDCTTest.testSparseIDCT []"
"jcodec","468","org.jcodec.codecs.h264.encode.MBEncoderI16x16.chromaPredBlk2(int,int,int,byte[])","1","org.jcodec.codecs.h264.H264EncoderTest.encodeDecode []"
"jcodec","469","org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictWithMode(int[][],int,int,boolean,boolean,byte[],byte[],byte[],byte[])","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","470","org.jcodec.common.model.Picture.fromPictureHiBD(PictureHiBD)","1","org.jcodec.codecs.prores.ProresEncoderTest.testWholeThing10Bit []"
"jcodec","471","org.jcodec.codecs.h264.decode.SliceHeaderReader.readReorderingEntries(BitReader)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","472","org.jcodec.codecs.h264.decode.MBlockDecoderInter8x8.predict8x8P(MBlock,Picture[],Picture,boolean,int,int,boolean,boolean,boolean,boolean,MvList,PartPred[])","1","org.jcodec.api.TranscoderTest.canFilterVideoAndCopyAudio []"
"jcodec","473","org.jcodec.codecs.mpa.Mp3Decoder.decodeMsStereo(MpaHeader,Granule,ScaleFactors[],float[][])","1","org.jcodec.codecs.mpa.Mp3DecoderTest.testOneFile []"
"jcodec","474","org.jcodec.codecs.h264.decode.FrameReader.addPps(ByteBuffer)","1","org.jcodec.api.FrameGrabTest.testFrameGrab []"
"jcodec","475","org.jcodec.scale.BicubicResampler.buildFilterTaps(int,int)","1","org.jcodec.scale.ResamplerTest.randomBicubicTest []"
"jcodec","476","org.jcodec.codecs.h264.decode.BlockInterpolator.getChroma0X(byte[],int,int,byte[],int,int,int,int,int,int,int)","1","org.jcodec.api.SequenceEncoderTest.testBufferOverflow []"
"jcodec","477","org.jcodec.codecs.h264.io.model.Frame.copyFromFrame(Frame)","1","org.jcodec.codecs.h264.conformance.ConformanceTest.testNoContainer []"
